{"version":3,"file":"static/webpack/static\\development\\pages\\cuenta.js.0223df89e9477e93dee1.hot-update.js","sources":["webpack:///./utils/Alert/Alert.js"],"sourcesContent":["import React from 'react';\nimport \"./Alert.css\";\n\n// Create Elements\nconst container = React.createElement(\"div\");\nconst box = React.createElement(\"div\");\nconst title = document.createElement(\"h4\");\nconst p = React.createElement(\"p\");\nconst actions = React.createElement(\"div\");\nconst input = React.createElement(\"input\");\nlet counterInstancer = 0;\n\nexport default class ShowMsg {\n    constructor() {\n        if (counterInstancer === 0) {\n            //Append Child\n            container.classList.add('alertContainer');\n            container.classList.add('unactiveAlert');\n            container.appendChild(box);\n            box.appendChild(title);\n            box.appendChild(p);\n            box.appendChild(input);\n            box.appendChild(actions);\n            document.body.appendChild(container);\n\n            //Values\n            input.type = \"text\";\n            input.classList.add(\"alertInput\");\n\n            //Props\n            this.alertProps = \"\";\n            counterInstancer++;\n        }\n    }\n\n    showMsg(data) {\n        //Variables\n        let go = document.createElement(\"button\");\n        let cancel = document.createElement(\"button\");\n\n        //Show container\n        container.classList.add('activeAlert');\n        container.classList.remove('unactiveAlert');\n        container.style.display = \"block\";\n        setTimeout(() => {\n            container.style.opacity = 1;\n        }, 10);\n\n        //Events\n        actions.appendChild(cancel);\n        actions.appendChild(go);\n\n        go.addEventListener('click', () => {\n            container.classList.remove('activeAlert');\n            container.classList.add('unactiveAlert');\n            container.style.opacity = 0;\n            setTimeout(() => {\n                container.style.display = \"none\";\n                actions.removeChild(go)\n                actions.removeChild(cancel);\n                cancel = '';\n                go = '';\n            }, 300);\n        })\n\n        cancel.addEventListener(\"click\", () => {\n            container.classList.remove('activeAlert');\n            container.classList.add('unactiveAlert');\n            container.style.opacity = 0;\n            setTimeout(() => {\n                container.style.display = \"none\";\n                actions.removeChild(cancel);\n                actions.removeChild(go)\n                go = '';\n                cancel = '';\n            }, 300);\n        })\n\n        if (data.onConfirm) go.addEventListener('click', () => data.onConfirm(input.value));\n\n        // Type Conditionals\n        cancel.classList.add(\"hide\");\n        go.classList.add(\"goAlertBtn\");\n        cancel.classList.add(\"cancelAlertBtn\")\n        go.classList.add(\"waves-effect\");\n        cancel.classList.add(\"waves-effect\");\n        input.classList.add(\"hide\");\n\n        if (data.type === 'alert') {\n            actions.classList.remove('errorType');\n            actions.classList.remove(\"confirmationType\");\n            actions.classList.add(\"primaryType\");\n        }\n        if (data.type === 'error') {\n            actions.classList.remove('primaryType');\n            actions.classList.remove(\"confirmationType\");\n            actions.classList.add(\"errorType\");\n        }\n        if (data.type === 'confirmation') {\n            actions.classList.remove('errorType');\n            actions.classList.remove(\"primaryType\");\n            actions.classList.add(\"confirmationType\");\n            cancel.classList.remove(\"hide\");\n        }\n\n        if (data.type === \"input\") {\n            actions.classList.remove('errorType');\n            actions.classList.remove(\"primaryType\");\n            actions.classList.add(\"confirmationType\");\n            cancel.classList.remove(\"hide\");\n            input.classList.remove('hide');\n            input.placeholder = data.placeholder ? data.placeholder : \"\";\n            input.value = \"\";\n        }\n\n        // Add Text Content\n        title.textContent = data.title;\n        p.innerHTML = data.body;\n        cancel.textContent = \"CANCELAR\";\n        if (data.succesText) go.textContent = data.succesText;\n        else go.textContent = \"ACEPTAR\";\n    }\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AA9GA;;;;A","sourceRoot":""}