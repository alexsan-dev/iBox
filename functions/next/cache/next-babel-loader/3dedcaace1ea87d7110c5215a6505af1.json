{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef } from 'react';\n\nconst Input = props => {\n  let visible = true;\n  const inp = useRef(null);\n\n  const fx = e => {\n    const label = inp.current.nextSibling;\n    const hr = label.nextSibling;\n    const i = hr.nextSibling;\n\n    if (label && inp.current.value.length === 0) {\n      label.classList.toggle(\"alabel\");\n      label.classList.toggle(\"dlabel\");\n      hr.classList.toggle(\"hractive\");\n      hr.classList.toggle(\"hrunactive\");\n      i.classList.toggle(\"iactive\");\n      i.classList.toggle(\"iunactive\");\n    }\n  };\n\n  const visibled = e => {\n    if (visible) {\n      e.target.innerHTML = \"visibility\";\n      inp.current.setAttribute(\"type\", \"text\");\n      visible = !visible;\n    } else {\n      e.target.innerHTML = \"visibility_off\";\n      inp.current.setAttribute(\"type\", \"password\");\n      visible = !visible;\n    }\n  };\n\n  const getText = e => props.value({\n    name: props.name,\n    text: inp.current.value\n  });\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"in\"\n  }, __jsx(\"input\", {\n    ref: inp,\n    type: props.type,\n    id: props.name,\n    name: props.name,\n    onFocus: fx,\n    onBlur: fx,\n    onChange: getText\n  }), __jsx(\"label\", {\n    htmlFor: props.name,\n    className: \"dlabel\"\n  }, props.label), __jsx(\"hr\", {\n    className: \"hrunactive\"\n  }), __jsx(\"i\", {\n    className: \"iunactive material-icons\"\n  }, props.icon), props.type === \"password\" ? __jsx(\"span\", {\n    onClick: visibled,\n    className: \"material-icons\"\n  }, \"visibility_off\") : \"\"), __jsx(\"span\", null, props.helper));\n};\n\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}