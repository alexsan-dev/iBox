{
    "ast": null,
    "code": "import \"./Alert.css\";\nlet counterInstancer = 0;\nexport default class Alert {\n  constructor(dom) {\n    if (counterInstancer === 0) {\n      // Create Elements\n      this.container = dom.createElement(\"div\");\n      this.box = dom.createElement(\"div\");\n      this.title = dom.createElement(\"h4\");\n      this.p = dom.createElement(\"p\");\n      this.actions = dom.createElement(\"div\");\n      this.input = dom.createElement(\"input\"); //Append Child\n\n      this.container.classList.add('alertContainer');\n      this.container.classList.add('unactiveAlert');\n      this.container.appendChild(this.box);\n      this.box.appendChild(this.title);\n      this.box.appendChild(this.p);\n      this.box.appendChild(this.input);\n      this.box.appendChild(this.actions);\n      this.dom = dom;\n      dom.body.appendChild(this.container); //Values\n\n      this.input.type = \"text\";\n      this.input.classList.add(\"alertInput\"); //Props\n\n      this.alertProps = \"\";\n      counterInstancer++;\n    }\n  }\n\n  show(data) {\n    //Variables\n    let go = this.dom.createElement(\"button\");\n    let cancel = this.dom.createElement(\"button\"); //Show container\n\n    this.container.classList.add('activeAlert');\n    this.container.classList.remove('unactiveAlert');\n    this.container.style.display = \"block\";\n    setTimeout(() => {\n      this.container.style.opacity = 1;\n    }, 10); //Events\n\n    this.actions.appendChild(cancel);\n    this.actions.appendChild(go);\n    go.addEventListener('click', () => {\n      this.container.classList.remove('activeAlert');\n      this.container.classList.add('unactiveAlert');\n      this.container.style.opacity = 0;\n      setTimeout(() => {\n        this.container.style.display = \"none\";\n        this.actions.removeChild(go);\n        this.actions.removeChild(cancel);\n        cancel = '';\n        go = '';\n      }, 300);\n    });\n    cancel.addEventListener(\"click\", () => {\n      this.container.classList.remove('activeAlert');\n      this.container.classList.add('unactiveAlert');\n      this.container.style.opacity = 0;\n      setTimeout(() => {\n        this.container.style.display = \"none\";\n        this.actions.removeChild(cancel);\n        this.actions.removeChild(go);\n        go = '';\n        cancel = '';\n      }, 300);\n    });\n    if (data.onConfirm) go.addEventListener('click', () => data.onConfirm(this.input.value)); // Type Conditionals\n\n    cancel.classList.add(\"hide\");\n    go.classList.add(\"goAlertBtn\");\n    cancel.classList.add(\"cancelAlertBtn\");\n    go.classList.add(\"waves\");\n    cancel.classList.add(\"waves\");\n    this.input.classList.add(\"hide\");\n\n    if (data.type === 'alert') {\n      this.actions.classList.remove('errorType');\n      this.actions.classList.remove(\"confirmationType\");\n      this.actions.classList.add(\"primaryType\");\n    }\n\n    if (data.type === 'error') {\n      this.actions.classList.remove('primaryType');\n      this.actions.classList.remove(\"confirmationType\");\n      this.actions.classList.add(\"errorType\");\n    }\n\n    if (data.type === 'confirmation') {\n      this.actions.classList.remove('errorType');\n      this.actions.classList.remove(\"primaryType\");\n      this.actions.classList.add(\"confirmationType\");\n      cancel.classList.remove(\"hide\");\n    }\n\n    if (data.type === \"input\") {\n      this.actions.classList.remove('errorType');\n      this.actions.classList.remove(\"primaryType\");\n      this.actions.classList.add(\"confirmationType\");\n      cancel.classList.remove(\"hide\");\n      this.input.classList.remove('hide');\n      this.input.placeholder = data.placeholder ? data.placeholder : \"\";\n      this.input.value = \"\";\n    } // Add Text Content\n\n\n    this.title.textContent = data.title;\n    this.p.innerHTML = data.body;\n    cancel.textContent = \"Cancelar\";\n    if (data.succesText) go.textContent = data.succesText;else go.textContent = \"Aceptar\";\n  }\n\n}",
    "map": null,
    "metadata": {},
    "sourceType": "module"
}